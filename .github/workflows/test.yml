# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #runs-on: ubuntu-16.04

    strategy:
      matrix:
        go: [ '1.14', '1.15', '1.16', '1.17' ]

    name: Go ${{ matrix.go }} build

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install required packages dependencies
      - name: Install required packages dependencies
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get -q -y install libbtrfs-dev btrfs-progs

      # Setup different version of golang
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      # Build the binary and install it
      - name: Building the binary and install it
        run: go build -v && go install -v

      # Create a BTRFS file
      - name: Creating an image file with a BTRFS filesystem
        run: rm -f test.img && truncate -s 150M test.img && sudo mkfs.btrfs -f test.img

      # Mount it
      - name: Mouting the BTRFS image file
        run: sudo rmdir test.mnt && sudo mkdir test.mnt && sudo mount -t btrfs -o loop test.img test.mnt

      # Running the tests
      - name: Running the tests
        run: rm -fr .tmp && mkdir .tmp && TMPDIR=$(pwd)/.tmp TEST_DIR=$(pwd)/test.mnt sh test.sh

      # Unmount
      - name: Unmounting the BTRFS image file
        run: ! ( LC_ALL=C mount | grep -q ' on .*test\.mnt' ) || sudo umount test.mnt
        if: always()

      # Cleanup
      - name: Cleaning up
        run: rm -fr .tmp test.img test.mnt
        if: always()
